name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  npm_build:
    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        node-version: [10.x, 12.x, 14.x, 15.x]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Cache Node Modules
      id: node-cache
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-
    - name: Install NPM Dependencies
      if: steps.node-cache.outputs.cache-hit != 'true'
      run: |
        cd ./frontend
        npm install
    - name: Run NPM Build
      run: |
        cd ./frontend
        npm run build
    - name: Archive Production Artifacts
      uses: actions/upload-artifact@v2
      with: 
        name: npm_build_result
        path: src/main/resources/static
  mvn_build:
    needs: npm_build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '8'
    - name: Cache Maven Dependencies
      id: maven-cache
      uses: actions/cache@v2
      env:
        cache-name: cache-maven-dependencies
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Build with maven
      run: mvn package -B -DskipTests
    - name: Archive Production Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: maven_build_result
        path: target/*.war
  aws_deploy:
    needs: [npm_build, mvn_build]
    runs-on: ubuntu-latest
    steps:
    - run: echo "AWS DEPLOY STAGE"