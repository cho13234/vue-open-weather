name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  npm_build:
    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        node-version: [10.x, 12.x, 14.x, 15.x]
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Cache Node Modules
      id: node-cache
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-

    - name: Install NPM Dependencies
      if: steps.node-cache.outputs.cache-hit != 'true'
      run: npm install
      working-directory: ./frontend

    - name: Run NPM Build
      run: npm run build
      working-directory: ./frontend

    - name: Archive Production Artifacts
      uses: actions/upload-artifact@v2
      with: 
        name: npm_build_result
        path: src/main/resources/static

  mvn_build:
    needs: npm_build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '8'

    - name: Cache Maven Dependencies
      id: maven-cache
      uses: actions/cache@v2
      env:
        cache-name: cache-maven-dependencies
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Download NPM Production Artifacts
      uses: actions/download-artifact@v2
      with:
        name: npm_build_result

    - name: Build with maven
      run: mvn package -B -DskipTests
      
    - name: Zip build file and deploy sh
      run: |
        mv target/spring-boot-vue-test-*.war ./
        mv scripts/*.sh ./
        zip bundle.zip ./appspec.yml, ./profile.sh, ./start.sh, ./stop.sh, ./health.sh, ./switch.sh, ./spring-boot-vue-test-*.war
      shell: bash

    - name: Archive Production Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: maven_build_result
        path: bundle.zip

  aws_deploy:
    needs: [npm_build, mvn_build]
    runs-on: ubuntu-latest
    steps:
    - run: echo "AWS DEPLOY STAGE"

    - name: Download Maven Production Artifacts
      uses: actions/download-artifact@v2
      with:
        name: maven_build_result
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.S3_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.S3_AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
 
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./bundle.zip s3://springboot-webservice-deploy-s3/
      
    - name: CodeDeploy
      run: | 
        aws deploy create-deployment \
        --application-name codedeploy-springboot-webservice \
        --deployment-group-name codedeploy-springboot-webservice-group \
        --file-exists-behavior OVERWRITE \
        --s3-location bucket=springboot-webservice-deploy-s3,bundleType=zip,key=bundle.zip \
        --region ap-northeast-2